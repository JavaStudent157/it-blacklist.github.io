{"version":3,"sources":["pages/feedback/index.tsx"],"names":["Feedback","state","useContext","GlobalState","useState","submitLoading","setSubmitLoading","checked","setChecked","navigate","useNavigate","location","useLocation","layout","footer","onChange","val","style","marginBottom","to","block","type","color","loading","onFinish","values","params","Modal","confirm","content","onConfirm","updateFeedbackApi","userInfo","createTime","Date","props","search","then","Dialog","alert","finally","Item","name","rules","required","message","placeholder","maxLength","rows"],"mappings":"2MA8EeA,UAnEY,WACzB,IAAQC,EAAUC,qBAAgBC,KAA1BF,MACR,EAA0CG,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cACXC,EAAWC,cA+BjB,OAAO,cAAC,IAAD,CACLC,OAAO,aACPC,OACE,qCACE,eAAC,IAAD,CACEP,QAASA,EACTQ,SAAU,SAACC,GAAD,OAASR,EAAWQ,IAC9BC,MAAO,CACL,cAAe,OACf,cAAe,OACf,QAAS,MACTC,aAAc,GAPlB,yEAUY,cAAC,IAAD,CAAMC,GAAG,aAAT,yCAEZ,cAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,SAASC,MAAM,UAAUC,QAASlB,EAArD,6BAKJmB,SAAU,SAACC,GAnDQ,IAACC,IAoDLD,EAnDVlB,EAOLoB,IAAMC,QAAQ,CACZC,QAAS,6CACTC,UAAW,WACTxB,GAAiB,GACjByB,YAAkB,2BACbL,GADY,IAEfM,SAAU/B,EAAM+B,SAChBC,YAAa,IAAIC,KACjBC,MAAOxB,EAASyB,UACfC,MAAK,WACNC,IAAOC,MAAM,CACXV,QAAS,2BACTC,UAAW,WACTrB,GAAU,SAGb+B,SAAQ,WACTlC,GAAiB,SAvBrBgC,IAAOC,MAAM,CACXV,QAAS,uCACTC,UAAW,gBA0BV,SAyBL,cAAC,IAAKW,KAAN,CAAWC,KAAK,UAAUC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAA7D,SACE,cAAC,IAAD,CAAUC,YAAY,iCAAQC,UAAW,IAAMC,KAAM","file":"static/js/8.111e1b9b.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  Button,\n  Form,\n  TextArea,\n  Modal, Dialog, Checkbox,\n} from 'antd-mobile'\nimport { GlobalState } from '../../store'\nimport { updateFeedbackApi } from '../../services/api'\nimport { useNavigate, Link,useLocation } from 'react-router-dom'\n\nconst Feedback: React.FC = () => {\n  const { state } = useContext<any>(GlobalState)\n  const [submitLoading, setSubmitLoading] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const navigate = useNavigate()\n  const location = useLocation()\n  const handleSubmit = (params: any) => {\n    if (!checked) {\n      Dialog.alert({\n        content: '请先勾选协议',\n        onConfirm: () => {},\n      })\n      return\n    }\n    Modal.confirm({\n      content: '确认要提交吗？',\n      onConfirm: () => {\n        setSubmitLoading(true)\n        updateFeedbackApi({\n          ...params,\n          userInfo: state.userInfo,\n          createTime: +new Date(),\n          props: location.search\n        }).then(() => {\n          Dialog.alert({\n            content: '保存成功',\n            onConfirm: () => {\n              navigate(-1)\n            },\n          })\n        }).finally(() => {\n          setSubmitLoading(false)\n        })\n      },\n    })\n  }\n  return <Form\n    layout=\"horizontal\"\n    footer={\n      <>\n        <Checkbox\n          checked={checked}\n          onChange={(val) => setChecked(val)}\n          style={{\n            '--icon-size': '18px',\n            '--font-size': '14px',\n            '--gap': '6px',\n            marginBottom: 8,\n          }}\n        >\n          勾选代表已阅读并同意<Link to=\"/statement\">相关条款</Link>\n        </Checkbox>\n        <Button block type=\"submit\" color=\"primary\" loading={submitLoading}>\n          提交\n        </Button>\n      </>\n    }\n    onFinish={(values) => {\n      handleSubmit(values)\n    }}\n  >\n    <Form.Item name=\"content\" rules={[{ required: true, message: '内容不能为空' }]}>\n      <TextArea placeholder=\"我要留言…\" maxLength={2000} rows={4}/>\n    </Form.Item>\n  </Form>\n}\n\nexport default Feedback"],"sourceRoot":""}