{"version":3,"file":"static/js/943.41c26e99.chunk.js","mappings":"4NAqHA,UAxGyB,WACvB,IAAQA,GAAUC,EAAAA,EAAAA,YAAgBC,EAAAA,IAA1BF,MACR,GAA0CG,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAyCjB,OADAC,QAAQC,IAAIb,IACL,UAAC,KAAD,CACLc,OAAO,aACPC,QACE,iCACE,UAAC,KAAD,CACEP,QAASA,EACTQ,SAAU,SAACC,GAAD,OAAOR,EAAWQ,IAC5BC,MAAO,CACL,cAAe,OACf,cAAe,OACf,QAAS,MACTC,aAAa,GAPjB,0EAUY,SAAC,KAAD,CAAMC,GAAG,aAAT,0CAEZ,SAAC,KAAD,CAAQC,OAAK,EAACC,KAAK,SAASC,MAAM,UAAUC,QAASlB,EAArD,6BAKJmB,SAAU,SAACC,GA7DQ,IAACC,EAAAA,EA8DLD,EA7DXlB,EAOJoB,EAAAA,GAAAA,QAAc,CACZC,QAAS,6CACTC,UAAW,WACTvB,GAAiB,IACjBwB,EAAAA,EAAAA,KAAc,kBACTJ,GADQ,IAEXK,KAAML,EAAOK,KAAK,GAClBC,SAAUjC,EAAMiC,YACfC,MAAK,SAACC,GACPvB,QAAQC,IAAIsB,GAEZ,OAAIA,QAAJ,IAAIA,GAAAA,EAAKC,QACPC,EAAAA,GAAAA,MAAa,CACXR,QAAS,2EACTC,UAAW,eAGbO,EAAAA,GAAAA,MAAa,CACXR,QAAS,2BACTC,UAAW,WACTpB,GAAU,SAIf4B,SAAQ,WACT/B,GAAiB,SA/BrB8B,EAAAA,GAAAA,MAAa,CACXR,QAAS,uCACTC,UAAW,gBAoCV,WAyBL,SAAC,UAAD,CACES,KAAK,UACLC,MAAM,2BACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qDAHrC,UAKE,SAAC,KAAD,CAAOC,YAAY,kDAErB,SAAC,UAAD,CACEL,KAAK,OACLC,MAAM,eACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCACnCE,QAAQ,YACRC,QAAS,WACPzC,GAAiB,IANrB,UASE,SAAC,KAAD,CACE0C,MAAM,2BACNC,QAAShD,EAAMiD,SACfC,QAAS9C,EACT+C,QAAS,WACP9C,GAAiB,IALrB,SAOE,SAAA+C,GAAK,OAAIA,EAAMC,OACbD,EAAME,KAAI,SAACC,GAAD,OAAYA,EAAEf,SAAOgB,KAAK,KACpC,uCAEN,SAAC,UAAD,CAAWjB,KAAK,UAAUE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAA7D,UACE,SAAC,KAAD,CAAUC,YAAY,iCAAQa,UAAW,IAAMC,KAAM","sources":["pages/create/index.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  CascadePicker,\r\n  Modal, Dialog,Checkbox\r\n} from 'antd-mobile'\r\nimport { GlobalState } from '../../store'\r\nimport { updateListApi } from '../../services/api'\r\nimport { useNavigate,Link } from 'react-router-dom'\r\n\r\nconst Create: React.FC = () => {\r\n  const { state } = useContext<any>(GlobalState)\r\n  const [pickerVisible, setPickerVisible] = useState(false)\r\n  const [submitLoading, setSubmitLoading] = useState(false)\r\n  const [checked, setChecked] = useState(false)\r\n  const navigate = useNavigate()\r\n  const handleSubmit = (params: any) => {\r\n    if(!checked){\r\n      Dialog.alert({\r\n        content: '请先勾选协议',\r\n        onConfirm: () => {},\r\n      })\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      content: '确认要提交吗？',\r\n      onConfirm: () => {\r\n        setSubmitLoading(true)\r\n        updateListApi({\r\n          ...params,\r\n          city: params.city[1],\r\n          userInfo: state.userInfo,\r\n        }).then((res) => {\r\n          console.log(res)\r\n          //@ts-ignore\r\n          if (res?.errcode) {\r\n            Dialog.alert({\r\n              content: '内容可能含有违法违规内容',\r\n              onConfirm: () => {},\r\n            })\r\n          } else {\r\n            Dialog.alert({\r\n              content: '保存成功',\r\n              onConfirm: () => {\r\n                navigate(-1)\r\n              },\r\n            })\r\n          }\r\n        }).finally(() => {\r\n          setSubmitLoading(false)\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  console.log(state)\r\n  return <Form\r\n    layout=\"horizontal\"\r\n    footer={\r\n      <>\r\n        <Checkbox\r\n          checked={checked}\r\n          onChange={(val)=>setChecked(val)}\r\n          style={{\r\n            '--icon-size': '18px',\r\n            '--font-size': '14px',\r\n            '--gap': '6px',\r\n            marginBottom:8\r\n          }}\r\n        >\r\n          勾选代表已阅读并同意<Link to=\"/statement\">相关条款</Link>\r\n        </Checkbox>\r\n        <Button block type=\"submit\" color=\"primary\" loading={submitLoading}>\r\n          提交\r\n        </Button>\r\n      </>\r\n    }\r\n    onFinish={(values) => {\r\n      handleSubmit(values)\r\n    }}\r\n  >\r\n    <Form.Item\r\n      name=\"company\"\r\n      label=\"公司名称\"\r\n      rules={[{ required: true, message: '公司名称不能为空' }]}\r\n    >\r\n      <Input placeholder=\"请输入公司名称\"/>\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"city\"\r\n      label=\"城市\"\r\n      rules={[{ required: true, message: '城市不能为空' }]}\r\n      trigger=\"onConfirm\"\r\n      onClick={() => {\r\n        setPickerVisible(true)\r\n      }}\r\n    >\r\n      <CascadePicker\r\n        title=\"城市选择\"\r\n        options={state.cityList}\r\n        visible={pickerVisible}\r\n        onClose={() => {\r\n          setPickerVisible(false)\r\n        }}\r\n      >{value => value.length\r\n        ? value.map((i: any) => i.label).join('/')\r\n        : '请选择城市'}</CascadePicker>\r\n    </Form.Item>\r\n    <Form.Item name=\"content\" rules={[{ required: true, message: '内容不能为空' }]}>\r\n      <TextArea placeholder=\"请输入内容\" maxLength={2000} rows={4}/>\r\n    </Form.Item>\r\n  </Form>\r\n}\r\n\r\nexport default Create"],"names":["state","useContext","GlobalState","useState","pickerVisible","setPickerVisible","submitLoading","setSubmitLoading","checked","setChecked","navigate","useNavigate","console","log","layout","footer","onChange","val","style","marginBottom","to","block","type","color","loading","onFinish","values","params","Modal","content","onConfirm","updateListApi","city","userInfo","then","res","errcode","Dialog","finally","name","label","rules","required","message","placeholder","trigger","onClick","title","options","cityList","visible","onClose","value","length","map","i","join","maxLength","rows"],"sourceRoot":""}